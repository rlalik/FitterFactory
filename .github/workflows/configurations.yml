# This is a basic workflow to help you get started with Actions
name: Compiler Checks

# Controls when the action will run. Triggers the workflow on push
on:
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: "${{ matrix.compiler.name }} (CMake: ${{ matrix.cmake-version }}, ROOT: ${{ matrix.root-version.name }})"
    runs-on: ${{ matrix.os-version }}

    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        build_type: [ Release ]
        compiler:
        - {
            name: "GCC-9",
            os: ubuntu-latest,
            cc: "gcc-9",
            cxx: "g++-9",
            package: g++-9,
          }
        - {
            name: "GCC-10",
            os: ubuntu-latest,
            cc: "gcc-10",
            cxx: "g++-10",
            package: g++-10,
          }
        - {
            name: "Clang-11",
            os: ubuntu-latest,
            cc: "clang-11",
            cxx: "clang++-11",
            package: clang-11,
          }
        - {
            name: "Clang-12",
            os: ubuntu-latest,
            cc: "clang-12",
            cxx: "clang++-12",
            package: clang-12,
          }
        cmake-version: [ "", "3.16" ]
        root-version:
        - {
            name: 6.22.08,
            cmake_args: "-DCMAKE_CXX_FLAGS='--std=c++17' -DCMAKE_CXX_STANDARD=17"
          }
        - {
            name: 6.24.00,
          }

    steps:
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install common dependencies
        run: |
          sudo apt update
          sudo apt install ${{ matrix.compiler.package }} -y
          sudo apt install cmake libgtest-dev lcov -y
          sudo apt install python3-numpy libtbb-dev libxxhash0 libafterimage-dev -y
          cmake --version
          wget http://gccb.if.uj.edu.pl/code/root-cpp17_${{ matrix.root-version.name }}_amd64.deb
          sudo dpkg -i root-cpp17_${{ matrix.root-version.name }}_amd64.deb
          . /etc/profile
          git clone https://github.com/rlalik/RootTools
          mkdir build_roottools
          cmake -S RootTools -B build_roottools -DCMAKE_INSTALL_PREFIX=/usr ${{ matrix.root-version.cmake_args }}
          cmake --build build_roottools
          sudo cmake --install build_roottools

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: ${{ matrix.cmake-version }}

      - name: Configure
        shell: bash
        run: |
          . /etc/profile
          root-config --version
          root-config --cflags
          root-config --features
          cmake \
            -S . \
            -B build \
            -DENABLE_TESTING=On \
            -DBUILD_EXAMPLES=On \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir \
            ${{ matrix.root-version.cmake_args }}

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        shell: bash
        run: cmake --build build --target test
